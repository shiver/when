from when.txt2date import Txt2Date
import unittest

class Tests(unittest.TestCase):
	def test_months(self):
		ttd = Txt2Date()

		# check month names and abbreviations
		self.assertEqual(ttd.match_month('jan'), 'january')
		self.assertEqual(ttd.match_month('january'), 'january')
		self.assertEqual(ttd.match_month('feb'), 'february')
		self.assertEqual(ttd.match_month('february'), 'february')
		self.assertEqual(ttd.match_month('mar'), 'march')
		self.assertEqual(ttd.match_month('march'), 'march')
		self.assertEqual(ttd.match_month('apr'), 'april')
		self.assertEqual(ttd.match_month('april'), 'april')
		self.assertEqual(ttd.match_month('may'), 'may')
		self.assertEqual(ttd.match_month('jun'), 'june')
		self.assertEqual(ttd.match_month('june'), 'june')
		self.assertEqual(ttd.match_month('jul'), 'july')
		self.assertEqual(ttd.match_month('july'), 'july')
		self.assertEqual(ttd.match_month('aug'), 'august')
		self.assertEqual(ttd.match_month('august'), 'august')
		self.assertEqual(ttd.match_month('sep'), 'september')
		self.assertEqual(ttd.match_month('sept'), 'september')
		self.assertEqual(ttd.match_month('september'), 'september')
		self.assertEqual(ttd.match_month('oct'), 'october')
		self.assertEqual(ttd.match_month('october'), 'october')
		self.assertEqual(ttd.match_month('nov'), 'november')
		self.assertEqual(ttd.match_month('november'), 'november')
		self.assertEqual(ttd.match_month('dec'), 'december')
		self.assertEqual(ttd.match_month('decemeber'), 'december')

		# test for false positives
		self.assertRaises(ValueError, ttd.match_month, 'mon')
		self.assertRaises(ValueError, ttd.match_month, 'monday')
		self.assertRaises(ValueError, ttd.match_month, 'tues')
		self.assertRaises(ValueError, ttd.match_month, 'tuesday')
		self.assertRaises(ValueError, ttd.match_month, 'wed')
		self.assertRaises(ValueError, ttd.match_month, 'wednesday')
		self.assertRaises(ValueError, ttd.match_month, 'thurs')
		self.assertRaises(ValueError, ttd.match_month, 'thursday')
		self.assertRaises(ValueError, ttd.match_month, 'fri')
		self.assertRaises(ValueError, ttd.match_month, 'friday')

	def test_days(self):
		ttd = Txt2Date()

		self.assertEqual(ttd.match_day('mon'), 'monday')
		self.assertEqual(ttd.match_day('monday'), 'monday')
		self.assertEqual(ttd.match_day('tues'), 'tuesday')
		self.assertEqual(ttd.match_day('tuesday'), 'tuesday')
		self.assertEqual(ttd.match_day('wed'), 'wednesday')
		self.assertEqual(ttd.match_day('wednesday'), 'wednesday')
		self.assertEqual(ttd.match_day('thurs'), 'thursday')
		self.assertEqual(ttd.match_day('thursday'), 'thursday')
		self.assertEqual(ttd.match_day('fri'), 'friday')
		self.assertEqual(ttd.match_day('friday'), 'friday')

		self.assertRaises(ValueError, ttd.match_day, 'jan')
		self.assertRaises(ValueError, ttd.match_day, 'january')
		self.assertRaises(ValueError, ttd.match_day, 'feb')
		self.assertRaises(ValueError, ttd.match_day, 'february')
		self.assertRaises(ValueError, ttd.match_day, 'mar')
		self.assertRaises(ValueError, ttd.match_day, 'march')
		self.assertRaises(ValueError, ttd.match_day, 'apr')
		self.assertRaises(ValueError, ttd.match_day, 'april')
		self.assertRaises(ValueError, ttd.match_day, 'may')
		self.assertRaises(ValueError, ttd.match_day, 'jun')
		self.assertRaises(ValueError, ttd.match_day, 'june')
		self.assertRaises(ValueError, ttd.match_day, 'jul')
		self.assertRaises(ValueError, ttd.match_day, 'july')
		self.assertRaises(ValueError, ttd.match_day, 'aug')
		self.assertRaises(ValueError, ttd.match_day, 'august')
		self.assertRaises(ValueError, ttd.match_day, 'sep')
		self.assertRaises(ValueError, ttd.match_day, 'sept')
		self.assertRaises(ValueError, ttd.match_day, 'september')
		self.assertRaises(ValueError, ttd.match_day, 'oct')
		self.assertRaises(ValueError, ttd.match_day, 'october')
		self.assertRaises(ValueError, ttd.match_day, 'nov')
		self.assertRaises(ValueError, ttd.match_day, 'november')
		self.assertRaises(ValueError, ttd.match_day, 'dec')
		self.assertRaises(ValueError, ttd.match_day, 'decemeber')

